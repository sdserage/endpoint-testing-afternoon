{
	"id": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
	"name": "Endpoint Testing Afternoon",
	"description": "",
	"order": [
		"79c35d06-6f7e-7a03-a0e9-1e21311e7af6",
		"0493746d-b0c5-699d-6c86-9a090cab776d",
		"93bc49fa-5b3a-5890-adf6-91a21a2ee88b",
		"8c8e73c3-6171-468e-5ff7-a7055fc012cb",
		"0cce353e-44c1-6a3d-23c7-1e2235852012",
		"680a2f0f-9d47-19a2-ff14-a4ebcafeb2ab",
		"53da87fb-4c43-cc79-827e-f7c9e18fd234",
		"b3759c5a-718a-6b20-6c54-0d9be36b77d1",
		"d2bfb576-07b6-27b1-c6d8-8108fe288a18",
		"e2ca9f88-398d-5411-ea89-d908676a809a",
		"824f6539-2566-5568-8466-35ca7561e507",
		"4407d345-ad9e-28c9-617b-097fb111059d",
		"7f5cd736-f86e-0f8a-8a70-ffbdfea5d36d"
	],
	"folders_order": [],
	"folders": [],
	"owner": "2755872",
	"hasRequests": true,
	"requests": [
		{
			"id": "0493746d-b0c5-699d-6c86-9a090cab776d",
			"headers": "",
			"headerData": [],
			"url": "localhost:3535/api/users/9",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test('Response is an array of exactly one user object with user id 9', ()=> {\n    const tatum = {\n        id: 9,\n        first_name: 'Tatum',\n        last_name: 'Vell',\n        email: 'tvell8@wisc.edu',\n        city: 'Youngstown',\n        state: 'Ohio',\n        phone: '(330) 6802507'\n    };\n    const body = pm.response.json();\n    pm.expect(body[0]).to.eql(tatum);\n    pm.expect(body.length).to.eql(1);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510349214095,
			"name": "GET - User By ID",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": []
		},
		{
			"id": "0cce353e-44c1-6a3d-23c7-1e2235852012",
			"headers": "",
			"headerData": [],
			"url": "http://localhost:3535/api/users?citty=new york",
			"queryParams": [
				{
					"key": "citty",
					"value": "new york",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "pm.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\npm.test('Error is sent when query parameter is misspelled', ()=>{\n    const message = 'Improper query sent in request';\n    pm.expect(pm.response.text()).to.include(message);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510352990686,
			"name": "GET - Search W Query (ERROR)",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": []
		},
		{
			"id": "4407d345-ad9e-28c9-617b-097fb111059d",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users/508",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 404\", function () {\n    pm.response.to.have.status(404);\n});\n\npm.test('Error message is \"No user with an ID of [given id].\" when the given id not in the database', ()=>{\n   pm.expect(pm.response.text()).to.eql('No user with an ID of 508.');\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510379867134,
			"name": "DELETE - Remove User (ERROR: User not found)",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
		},
		{
			"id": "53da87fb-4c43-cc79-827e-f7c9e18fd234",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users/userId",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\npm.test('Error message \"Error with user ID in request\" when text is used instea of a number', ()=>{\n   pm.expect(pm.response.text()).to.eql('Error with user ID in request.');\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510376527727,
			"name": "PUT - Update User By Id (ERROR: text)",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"email\": \"garey@ilovecode.com\",\n\t\"city\": \"Pittsburg\"\n}"
		},
		{
			"id": "680a2f0f-9d47-19a2-ff14-a4ebcafeb2ab",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users/23",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test('Updates user by id', ()=>{\n    const body = pm.response.json();\n    pm.expect(body[0].email).to.eql('garey@ilovecode.com');\n    pm.expect(body[0].city).to.eql('Pittsburg');\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510375658703,
			"name": "PUT - Update User By Id",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"email\": \"garey@ilovecode.com\",\n\t\"city\": \"Pittsburg\"\n}"
		},
		{
			"id": "79c35d06-6f7e-7a03-a0e9-1e21311e7af6",
			"headers": "",
			"headerData": [],
			"url": "http://localhost:3535/api/users",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test('Response is an array', ()=> {\n    const body = pm.response.json();\n    pm.expect(Array.isArray(body)).to.eql(true);\n});\n\npm.test('Exactly 100 users are returned', ()=> {\n    const body = pm.response.json();\n    pm.expect(body.length).to.eql(100);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510348799018,
			"name": "GET - All Users",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": []
		},
		{
			"id": "7f5cd736-f86e-0f8a-8a70-ffbdfea5d36d",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users/five",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\npm.test('Error message is \"Error with user ID in request.\" when a non-number is passed in', ()=>{\n    pm.expect(pm.response.text()).to.eql(\"Error with user ID in request.\");\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510380042231,
			"name": "DELETE - Remove User (ERROR: Text)",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
		},
		{
			"id": "824f6539-2566-5568-8466-35ca7561e507",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users/66",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test('Returned object id matches the deleted user', ()=>{\n   const body = pm.response.json();\n   pm.expect(body[0].id).to.eql(66);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510379454981,
			"name": "DELETE - Remove User",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
		},
		{
			"id": "8c8e73c3-6171-468e-5ff7-a7055fc012cb",
			"headers": "",
			"headerData": [],
			"url": "http://localhost:3535/api/users?firstName=t",
			"queryParams": [
				{
					"key": "firstName",
					"value": "t",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test('All objects in the returned array have at least one \"t\" in their first_name prop', ()=>{\n   const body = pm.response.json();\n   let flag = false;\n   body.forEach(user=>{\n      if(!user.first_name.toLowerCase().includes('t')){\n          flag = true;\n      } \n   });\n   pm.expect(flag).to.eql(false);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510350010060,
			"name": "GET - Search W/ Query",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": []
		},
		{
			"id": "93bc49fa-5b3a-5890-adf6-91a21a2ee88b",
			"headers": "",
			"headerData": [],
			"url": "localhost:3535/api/users/id",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "pm.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\npm.test('Response is string: \"User id sent must be a number\"', ()=>{\n   const message = 'User id sent must be a number';\n   pm.expect(pm.response.text()).to.include(message);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510349485616,
			"name": "GET - User By ID (ERROR)",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": []
		},
		{
			"id": "b3759c5a-718a-6b20-6c54-0d9be36b77d1",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users/208",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 404\", function () {\n    pm.response.to.have.status(404);\n});\n\npm.test('Return message \"User not found\" when id doesn\\'t match any users in the database', ()=>{\n   pm.expect(pm.response.text()).to.eql('User not found.');\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510376727017,
			"name": "PUT - Update User By ID (ERROR: User not found)",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"email\": \"garey@ilovecode.com\",\n\t\"city\": \"Pittsburg\"\n}"
		},
		{
			"id": "d2bfb576-07b6-27b1-c6d8-8108fe288a18",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n\npm.test('User object has the correct values', ()=>{\n    const body = pm.response.json();\n    let flag = false;\n    function setTrue(){\n        flag = true;\n    }\n    bruce = {\n        \"id\": 103,\n        \"first_name\": \"Bruce\",\n        \"last_name\": \"Wayne\",\n        \"email\": \"bruce@scarybat.com\",\n        \"city\": \"Gotham\",\n        \"state\": \"New Jersey\",\n        \"phone\": \"(856) 6044252\"\n    };\n    let keys = Object.keys(body[0]);\n    for(let key in keys){\n        if(key === 'id'){\n            if(typeof body[0][key] !== 'number'){\n                setTrue();\n            }else{\n                if(bruce[key] !== body[0][key]){\n                    setTrue();\n                }\n            }\n        }\n    }\n    pm.expect(flag).to.eql(false);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510379136917,
			"name": "POST - Create New User",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"city\": \"Gotham\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
		},
		{
			"id": "e2ca9f88-398d-5411-ea89-d908676a809a",
			"headers": "Content-Type: application/json\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"url": "http://localhost:3535/api/users",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "pm.test(\"Status code is 400\", function () {\n    pm.response.to.have.status(400);\n});\n\npm.test('Error message is \"All needed user info was not sent in the body of request.\" when body is not sent properly', ()=>{\n    pm.expect(pm.response.text()).to.eql(\"All needed user info was not sent in the body of request.\");\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1510379316476,
			"name": "POST - Create New User (ERROR: Incomplete body)",
			"description": "",
			"collectionId": "bc8dd258-b80f-80d9-1d6c-516fcf99d6d1",
			"responses": [],
			"rawModeData": "{\n\t\"first_name\": \"Bruce\",\n\t\"last_name\": \"Wayne\",\n\t\"email\": \"bruce@scarybat.com\",\n\t\"state\": \"New Jersey\",\n\t\"phone\": \"(856) 6044252\"\n}"
		}
	]
}